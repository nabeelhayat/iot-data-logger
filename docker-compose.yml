services:
  api:
    container_name: iot-data-logger
    build:
      context: .
      dockerfile: Dockerfile
      target: ${NODE_ENV:-development}
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - "${PORT:-4001}:4001"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/iot_data_logger_db
      - PORT=4001
      - NODE_ENV=${NODE_ENV:-development}
      - MQTT_URL=mqtt://mosquitto:1883
    depends_on:
      db:
        condition: service_healthy
      mosquitto:
        condition: service_healthy
    networks:
      - mqtt_network

  db:
    container_name: iot-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=iot_data_logger_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      mosquitto:
        condition: service_healthy
    networks:
      - mqtt_network

  mosquitto:
    image: eclipse-mosquitto:2.0
    container_name: mosquitto-broker
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    healthcheck:
      test: ["CMD", "mosquitto_sub", "-t", "$$SYS/#", "-C", "1", "-i", "healthcheck", "-W", "3"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    networks:
      - mqtt_network

volumes:
  postgres_data:

networks:
  mqtt_network:
    driver: bridge